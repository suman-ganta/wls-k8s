apiVersion: v1
kind: Namespace
metadata:
  name: wls1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wls
  namespace: wls1
---
#
# creating cluster roles
#
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: wls-role
  namespace: wls1
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["selfsubjectaccessreviews", "localsubjectaccessreviews", "subjectaccessreviews", "selfsubjectrulesreviews"]
  verbs: ["create"]
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: wls-admin
  namespace: wls1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wls-admin
  template:
    metadata:
      labels:
        app: wls-admin
        tenant: t1
    spec:
      serviceAccountName: wls
      containers:
      - name: wls-admin
        image: phx.ocir.io/oicpaas1/sumagant/wls-domain:12.2.1.3
        imagePullPolicy: Always
      imagePullSecrets:
      - name: k8s-pull
---
#
# creating role-bindings
#
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: wls-rolebinding
  namespace: wls1
subjects:
- kind: ServiceAccount
  name: wls
  namespace: wls1
  apiGroup: ""
roleRef:
  kind: Role
  name: wls-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: wls-admin
  namespace: wls1
spec:
  selector:
    app: wls-admin
  ports:
  - protocol: TCP
    port: 80
    targetPort: 7001
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: wls-admin
  namespace: wls1
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/proxy-redirect: default
spec:
  rules:
  - http:
      paths:
      - path: /wls-admin
        backend:
          serviceName: wls-admin
          servicePort: 80
