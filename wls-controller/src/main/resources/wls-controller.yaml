apiVersion: v1
kind: Namespace
metadata:
  name: wls
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wls
  namespace: wls
---
#
# creating role
#
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: wls-role
  namespace: wls
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["selfsubjectaccessreviews", "localsubjectaccessreviews", "subjectaccessreviews", "selfsubjectrulesreviews"]
  verbs: ["create"]
---
#
# creating role-bindings
#
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: wls-rolebinding
  namespace: wls
subjects:
- kind: ServiceAccount
  name: wls
  namespace: wls
  apiGroup: ""
roleRef:
  kind: Role
  name: wls-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: metacontroller.k8s.io/v1alpha1
kind: DecoratorController
metadata:
  name: wls-controller
  namespace: wls
spec:
  resources:
  - apiVersion: v1
    resource: pods
    labelSelector:
      matchExpressions:
      - {key: tenant, operator: Exists}
  resyncPeriodSeconds: 30
  hooks:
    sync:
      webhook:
        url: http://wls-controller.wls/wls/controller
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: wls-controller
  namespace: wls
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wls-controller
  template:
    metadata:
      labels:
        app: wls-controller
    spec:
      serviceAccountName: wls
      containers:
      - name: hooks
        image: phx.ocir.io/oicpaas1/sumagant/wls-controller:latest
        imagePullPolicy: Always
        env:
        - name: v
          value: INFO
      imagePullSecrets:
      - name: k8s-pull
---
apiVersion: v1
kind: Service
metadata:
  name: wls-controller
  namespace: wls
spec:
  selector:
    app: wls-controller
  ports:
  - port: 80
    targetPort: 8080
